from pyrogram import filters
from pyrogram.types import InlineKeyboardButton, InlineKeyboardMarkup

from VIPMUSIC import app as Bot

# =============START_CMD====================
TEXT_ST = (
    "üëãüòÑ__Hello {},__\n\n"
    "<blockquote> Welcome to the üéàùê∫ùëúùëóùëú ùëÜùëéùë°ùëúùëüùë¢ ùïè | ùêµùëúùë°! This is a powerful‚ö°üå™Ô∏è bot for Telegram.</blockquote>\n\n"
    "**__Click help to know how to use me!__**"
)
BUTTONS_ST = [
    [
        InlineKeyboardButton("Channel üì¢", url="https://t.me/XBOTS_X"),
        InlineKeyboardButton("Commands üìö", callback_data="help"),
        InlineKeyboardButton("About üí°", callback_data="abot"),
        InlineKeyboardButton("Sudo üë•", callback_data="sudo"),
    ],
    [InlineKeyboardButton("‚ùå", callback_data="close")],
]


@Bot.on_callback_query(filters.regex("^home$"))
async def st_cb_handler(bot, query):
    await query.message.edit(
        text=TEXT_ST.format(query.from_user.first_name),
        reply_markup=InlineKeyboardMarkup(BUTTONS_ST),
        disable_web_page_preview=True,
    )


# ==============================MAIN_HELP_CMD====================
# ==============================MAIN_HELP_CMD====================
# ==============================MAIN_HELP_CMD====================
TEXT_HP = """
C ü…™·¥Ñ·¥ã ·¥è…¥ ·¥õ ú·¥á  ô·¥ú·¥õ·¥õ·¥è…¥s  ô·¥á ü·¥è·¥° “ì·¥è Ä ·¥ç·¥è Ä·¥á …™…¥“ì·¥è Ä·¥ç·¥Ä·¥õ…™·¥è…¥. I“ì  è·¥è·¥ú' Ä·¥á “ì·¥Ä·¥Ñ…™…¥…¢ ·¥Ä…¥ è ·¥ò Ä·¥è ô ü·¥á·¥ç   è·¥è·¥ú ·¥Ñ·¥Ä…¥ ·¥Äs·¥ã …™…¥ s·¥ú·¥ò·¥ò·¥è Ä·¥õ ·¥Ñ ú·¥Ä·¥õ.

A ü ü ·¥Ñ·¥è·¥ç·¥ç·¥Ä…¥·¥Ös ·¥Ñ·¥Ä…¥  ô·¥á ·¥ús·¥á·¥Ö ·¥°…™·¥õ ú: /
"""
BUTTONS_HP = [
    [
        InlineKeyboardButton("Ac·¥õ…™·¥†·¥á", callback_data="act"),
        InlineKeyboardButton("Ad·¥ç…™…¥", callback_data="adm"),
        InlineKeyboardButton("Au·¥õ ú", callback_data="aut"),
    ],
    [
        InlineKeyboardButton("A·¥Ö·¥†…™·¥Ñ·¥á", callback_data="adv"),
        InlineKeyboardButton("A·¥ò·¥ò Ä·¥è·¥†·¥á", callback_data="apr"),
        InlineKeyboardButton("B- ü…™s·¥õ", callback_data="blt"),
    ],
    [
        InlineKeyboardButton("Bo·¥õ", callback_data="bt"),
        InlineKeyboardButton("B·¥Ä…¥", callback_data="bn"),
        InlineKeyboardButton("B·¥è·¥õs", callback_data="bts"),
    ],
    [
        InlineKeyboardButton("B·¥è·¥õs·¥Ñ ú·¥ã", callback_data="bsk"),
        InlineKeyboardButton("C ú·¥Ä·¥õ Ai", callback_data="ai"),
        InlineKeyboardButton("De·¥†", callback_data="dv"),
    ],
    [
        InlineKeyboardButton("‚ùÆ", callback_data="settings5"),
        InlineKeyboardButton("‚ùå", callback_data="close"),
        InlineKeyboardButton("‚ùØ", callback_data="settings2"),
    ],
]
@Bot.on_message(filters.command("help2") & filters.private)
async def hp_handler(bot, message):
    await message.reply_text(
        text=TEXT_HP.format(message.from_user.first_name),
        reply_markup=InlineKeyboardMarkup(BUTTONS_HP),
        quote=True,
    )

@Bot.on_callback_query(filters.regex("^settings$"))
async def help_cb_handler(bot, query):
    await query.message.edit(
        text=TEXT_HP.format(query.from_user.first_name),
        reply_markup=InlineKeyboardMarkup(BUTTONS_HP),
        disable_web_page_preview=True,
    )


TEXT_HP2 = """
C ü…™·¥Ñ·¥ã ·¥è…¥ ·¥õ ú·¥á  ô·¥ú·¥õ·¥õ·¥è…¥s  ô·¥á ü·¥è·¥° “ì·¥è Ä ·¥ç·¥è Ä·¥á …™…¥“ì·¥è Ä·¥ç·¥Ä·¥õ…™·¥è…¥. I“ì  è·¥è·¥ú' Ä·¥á “ì·¥Ä·¥Ñ…™…¥…¢ ·¥Ä…¥ è ·¥ò Ä·¥è ô ü·¥á·¥ç   è·¥è·¥ú ·¥Ñ·¥Ä…¥ ·¥Äs·¥ã …™…¥ s·¥ú·¥ò·¥ò·¥è Ä·¥õ ·¥Ñ ú·¥Ä·¥õ.

A ü ü ·¥Ñ·¥è·¥ç·¥ç·¥Ä…¥·¥Ös ·¥Ñ·¥Ä…¥  ô·¥á ·¥ús·¥á·¥Ö ·¥°…™·¥õ ú: /
"""
BUTTONS_HP2 = [
    [
        InlineKeyboardButton("Filters", callback_data="flt"),
        InlineKeyboardButton("F…™…¢ ü·¥á·¥õ", callback_data="fgl"),
        InlineKeyboardButton("F·¥Ä·¥ã·¥á", callback_data="fk"),
    ],
    [
        InlineKeyboardButton("F·¥è…¥·¥õ", callback_data="fon"),
        InlineKeyboardButton("F·¥ú…¥", callback_data="fn"),
        InlineKeyboardButton("G-·¥Ñ·¥Äs·¥õ", callback_data="gt"),
    ],
    [
        InlineKeyboardButton("G Ä·¥è·¥ú·¥ò L…™…¥·¥ã", callback_data="gl"),
        InlineKeyboardButton("G·¥Ä ü…™", callback_data="gli"),
        InlineKeyboardButton("s·¥á·¥Ä Ä·¥Ñ ú", callback_data="src"),
    ],
    [
        InlineKeyboardButton("G·¥è·¥è·¥Ö ô è·¥á", callback_data="gdy"),
        InlineKeyboardButton("H…™s·¥õ·¥è Ä è", callback_data="hsr"),
        InlineKeyboardButton("H·¥Äs ú·¥õ·¥Ä…¢", callback_data="htg"),
    ],
    [
        InlineKeyboardButton("‚ùÆ", callback_data="settings"),
        InlineKeyboardButton("‚ùå", callback_data="close"),
        InlineKeyboardButton("‚ùØ", callback_data="settings3"),
    ],
]
@Bot.on_callback_query(filters.regex("^settings2$"))
async def help_cb_handler(bot, query):
    await query.message.edit(
        text=TEXT_HP2.format(query.from_user.first_name),
        reply_markup=InlineKeyboardMarkup(BUTTONS_HP2),
        disable_web_page_preview=True,
    )


TEXT_HP3 = """
C ü…™·¥Ñ·¥ã ·¥è…¥ ·¥õ ú·¥á  ô·¥ú·¥õ·¥õ·¥è…¥s  ô·¥á ü·¥è·¥° “ì·¥è Ä ·¥ç·¥è Ä·¥á …™…¥“ì·¥è Ä·¥ç·¥Ä·¥õ…™·¥è…¥. I“ì  è·¥è·¥ú' Ä·¥á “ì·¥Ä·¥Ñ…™…¥…¢ ·¥Ä…¥ è ·¥ò Ä·¥è ô ü·¥á·¥ç   è·¥è·¥ú ·¥Ñ·¥Ä…¥ ·¥Äs·¥ã …™…¥ s·¥ú·¥ò·¥ò·¥è Ä·¥õ ·¥Ñ ú·¥Ä·¥õ.

A ü ü ·¥Ñ·¥è·¥ç·¥ç·¥Ä…¥·¥Ös ·¥Ñ·¥Ä…¥  ô·¥á ·¥ús·¥á·¥Ö ·¥°…™·¥õ ú: /
"""
BUTTONS_HP3 = [
    [
        InlineKeyboardButton("Ac·¥õ…™·¥†·¥á", callback_data="act"),
        InlineKeyboardButton("Ad·¥ç…™…¥", callback_data="adm"),
        InlineKeyboardButton("Au·¥õ ú", callback_data="aut"),
    ],
    [
        InlineKeyboardButton("A·¥Ö·¥†…™·¥Ñ·¥á", callback_data="adv"),
        InlineKeyboardButton("A·¥ò·¥ò Ä·¥è·¥†·¥á", callback_data="apr"),
        InlineKeyboardButton("B- ü…™s·¥õ", callback_data="blt"),
    ],
    [
        InlineKeyboardButton("Bo·¥õ", callback_data="bt"),
        InlineKeyboardButton("B·¥Ä…¥", callback_data="bn"),
        InlineKeyboardButton("B·¥è·¥õs", callback_data="bts"),
    ],
    [
        InlineKeyboardButton("B·¥è·¥õs·¥Ñ ú·¥ã", callback_data="bsk"),
        InlineKeyboardButton("C ú·¥Ä·¥õ Ai", callback_data="ai"),
        InlineKeyboardButton("De·¥†", callback_data="dv"),
    ],
    [
        InlineKeyboardButton("‚ùÆ", callback_data="settings2"),
        InlineKeyboardButton("‚ùå", callback_data="close"),
        InlineKeyboardButton("‚ùØ", callback_data="settings4"),
    ],
]
@Bot.on_callback_query(filters.regex("^settings3$"))
async def help_cb_handler(bot, query):
    await query.message.edit(
        text=TEXT_HP3.format(query.from_user.first_name),
        reply_markup=InlineKeyboardMarkup(BUTTONS_HP3),
        disable_web_page_preview=True,
    )


TEXT_HP4 = """
C ü…™·¥Ñ·¥ã ·¥è…¥ ·¥õ ú·¥á  ô·¥ú·¥õ·¥õ·¥è…¥s  ô·¥á ü·¥è·¥° “ì·¥è Ä ·¥ç·¥è Ä·¥á …™…¥“ì·¥è Ä·¥ç·¥Ä·¥õ…™·¥è…¥. I“ì  è·¥è·¥ú' Ä·¥á “ì·¥Ä·¥Ñ…™…¥…¢ ·¥Ä…¥ è ·¥ò Ä·¥è ô ü·¥á·¥ç   è·¥è·¥ú ·¥Ñ·¥Ä…¥ ·¥Äs·¥ã …™…¥ s·¥ú·¥ò·¥ò·¥è Ä·¥õ ·¥Ñ ú·¥Ä·¥õ.

A ü ü ·¥Ñ·¥è·¥ç·¥ç·¥Ä…¥·¥Ös ·¥Ñ·¥Ä…¥  ô·¥á ·¥ús·¥á·¥Ö ·¥°…™·¥õ ú: /
"""
BUTTONS_HP4 = [
    [
        InlineKeyboardButton("Ac·¥õ…™·¥†·¥á", callback_data="act"),
        InlineKeyboardButton("Ad·¥ç…™…¥", callback_data="adm"),
        InlineKeyboardButton("Au·¥õ ú", callback_data="aut"),
    ],
    [
        InlineKeyboardButton("A·¥Ö·¥†…™·¥Ñ·¥á", callback_data="adv"),
        InlineKeyboardButton("A·¥ò·¥ò Ä·¥è·¥†·¥á", callback_data="apr"),
        InlineKeyboardButton("B- ü…™s·¥õ", callback_data="blt"),
    ],
    [
        InlineKeyboardButton("Bo·¥õ", callback_data="bt"),
        InlineKeyboardButton("B·¥Ä…¥", callback_data="bn"),
        InlineKeyboardButton("B·¥è·¥õs", callback_data="bts"),
    ],
    [
        InlineKeyboardButton("B·¥è·¥õs·¥Ñ ú·¥ã", callback_data="bsk"),
        InlineKeyboardButton("C ú·¥Ä·¥õ Ai", callback_data="ai"),
        InlineKeyboardButton("De·¥†", callback_data="dv"),
    ],
    [
        InlineKeyboardButton("‚ùÆ", callback_data="settings3"),
        InlineKeyboardButton("‚ùå", callback_data="close"),
        InlineKeyboardButton("‚ùØ", callback_data="setting5"),
    ],
]
@Bot.on_callback_query(filters.regex("^settings4$"))
async def help_cb_handler(bot, query):
    await query.message.edit(
        text=TEXT_HP4.format(query.from_user.first_name),
        reply_markup=InlineKeyboardMarkup(BUTTONS_HP4),
        disable_web_page_preview=True,
    )


TEXT_HP5 = """
C ü…™·¥Ñ·¥ã ·¥è…¥ ·¥õ ú·¥á  ô·¥ú·¥õ·¥õ·¥è…¥s  ô·¥á ü·¥è·¥° “ì·¥è Ä ·¥ç·¥è Ä·¥á …™…¥“ì·¥è Ä·¥ç·¥Ä·¥õ…™·¥è…¥. I“ì  è·¥è·¥ú' Ä·¥á “ì·¥Ä·¥Ñ…™…¥…¢ ·¥Ä…¥ è ·¥ò Ä·¥è ô ü·¥á·¥ç   è·¥è·¥ú ·¥Ñ·¥Ä…¥ ·¥Äs·¥ã …™…¥ s·¥ú·¥ò·¥ò·¥è Ä·¥õ ·¥Ñ ú·¥Ä·¥õ.

A ü ü ·¥Ñ·¥è·¥ç·¥ç·¥Ä…¥·¥Ös ·¥Ñ·¥Ä…¥  ô·¥á ·¥ús·¥á·¥Ö ·¥°…™·¥õ ú: /
"""
BUTTONS_HP5 = [
    [
        InlineKeyboardButton("Ac·¥õ…™·¥†·¥á", callback_data="act"),
        InlineKeyboardButton("Ad·¥ç…™…¥", callback_data="adm"),
        InlineKeyboardButton("Au·¥õ ú", callback_data="aut"),
    ],
    [
        InlineKeyboardButton("A·¥Ö·¥†…™·¥Ñ·¥á", callback_data="adv"),
        InlineKeyboardButton("A·¥ò·¥ò Ä·¥è·¥†·¥á", callback_data="apr"),
        InlineKeyboardButton("B- ü…™s·¥õ", callback_data="blt"),
    ],
    [
        InlineKeyboardButton("Bo·¥õ", callback_data="bt"),
        InlineKeyboardButton("B·¥Ä…¥", callback_data="bn"),
        InlineKeyboardButton("B·¥è·¥õs", callback_data="bts"),
    ],
    [
        InlineKeyboardButton("B·¥è·¥õs·¥Ñ ú·¥ã", callback_data="bsk"),
        InlineKeyboardButton("C ú·¥Ä·¥õ Ai", callback_data="ai"),
        InlineKeyboardButton("De·¥†", callback_data="dv"),
    ],
    [
        InlineKeyboardButton("‚ùÆ", callback_data="settings4"),
        InlineKeyboardButton("‚ùå", callback_data="close"),
        InlineKeyboardButton("‚ùØ", callback_data="settings"),
    ],
]
@Bot.on_callback_query(filters.regex("^settings5$"))
async def help_cb_handler(bot, query):
    await query.message.edit(
        text=TEXT_HP5.format(query.from_user.first_name),
        reply_markup=InlineKeyboardMarkup(BUTTONS_HP5),
        disable_web_page_preview=True,
    )


# =============================EXTRA_CMD================================
# =============================EXTRA_CMD================================

text_act = """
H·¥á Ä·¥á Is T ú·¥á H·¥á ü·¥ò F·¥è Ä Ac·¥õ…™·¥†·¥á:

„ÄÖ /ac - C ú·¥á·¥Ñ·¥ã ·¥Ä·¥Ñ·¥õ…™·¥†·¥á ·¥†·¥è…™·¥Ñ·¥á ·¥Ñ ú·¥Ä·¥õs ·¥è…¥  ô·¥è·¥õ.

„ÄÖ /activevoice - C ú·¥á·¥Ñ·¥ã ·¥Ä·¥Ñ·¥õ…™·¥†·¥á ·¥†·¥è…™·¥Ñ·¥á ·¥Ñ ú·¥Ä·¥õs ·¥Ä…¥·¥Ö ·¥†…™·¥Ö·¥á·¥è ·¥Ñ·¥Ä ü üs ·¥è…¥  ô·¥è·¥õ.

„ÄÖ /activevideo - C ú·¥á·¥Ñ·¥ã ·¥Ä·¥Ñ·¥õ…™·¥†·¥á ·¥†…™·¥Ö·¥á·¥è ·¥Ñ·¥Ä ü üs ·¥è…¥  ô·¥è·¥õ.

„ÄÖ /stats - C ú·¥á·¥Ñ·¥ã B·¥è·¥õs S·¥õ·¥Ä·¥õs
"""
buttons_act = [
    [
        InlineKeyboardButton("‚¨ÖÔ∏è", callback_data="settings"),
        InlineKeyboardButton("‚ùå", callback_data="close"),
    ]
]
@Bot.on_callback_query(filters.regex("^act$"))
async def abot_cb_handler(bot, query):
    await query.message.edit(
        text=text_act,
        reply_markup=InlineKeyboardMarkup(buttons_act),
        disable_web_page_preview=True,
    )


text_adm = """
H·¥á Ä·¥á Is T ú·¥á H·¥á ü·¥ò F·¥è Ä Ad·¥ç…™…¥:
c s·¥õ·¥Ä…¥·¥Ös “ì·¥è Ä ·¥Ñ ú·¥Ä…¥…¥·¥á ü ·¥ò ü·¥Ä è.

„ÄÖ /pause ·¥è Ä /cpause - P·¥Ä·¥ús·¥á ·¥õ ú·¥á ·¥ò ü·¥Ä è…™…¥…¢ ·¥ç·¥ús…™·¥Ñ.
„ÄÖ /resume ·¥è Ä /cresume - R·¥ás·¥ú·¥ç·¥á ·¥õ ú·¥á ·¥ò·¥Ä·¥ús·¥á·¥Ö ·¥ç·¥ús…™·¥Ñ.
„ÄÖ /mute ·¥è Ä /cmute - M·¥ú·¥õ·¥á ·¥õ ú·¥á ·¥ò ü·¥Ä è…™…¥…¢ ·¥ç·¥ús…™·¥Ñ.
„ÄÖ /unmute ·¥è Ä /cunmute - U…¥·¥ç·¥ú·¥õ·¥á ·¥õ ú·¥á ·¥ç·¥ú·¥õ·¥á·¥Ö ·¥ç·¥ús…™·¥Ñ.
„ÄÖ /skip ·¥è Ä /cskip - S·¥ã…™·¥ò ·¥õ ú·¥á ·¥Ñ·¥ú Ä Ä·¥á…¥·¥õ ·¥ò ü·¥Ä è…™…¥…¢ ·¥ç·¥ús…™·¥Ñ.
„ÄÖ /stop ·¥è Ä /cstop - S·¥õ·¥è·¥ò ·¥õ ú·¥á ·¥ò ü·¥Ä è…™…¥…¢ ·¥ç·¥ús…™·¥Ñ.
„ÄÖ /shuffle ·¥è Ä /cshuffle - R·¥Ä…¥·¥Ö·¥è·¥ç ü è s ú·¥ú“ì“ì ü·¥ás ·¥õ ú·¥á «´·¥ú·¥á·¥ú·¥á·¥Ö ·¥ò ü·¥Ä è ü…™s·¥õ.
„ÄÖ /seek ·¥è Ä /cseek - F·¥è Ä·¥°·¥Ä Ä·¥Ö S·¥á·¥á·¥ã ·¥õ ú·¥á ·¥ç·¥ús…™·¥Ñ ·¥õ·¥è  è·¥è·¥ú Ä ·¥Ö·¥ú Ä·¥Ä·¥õ…™·¥è…¥.
„ÄÖ /seekback ·¥è Ä /cseekback - B·¥Ä·¥Ñ·¥ã·¥°·¥Ä Ä·¥Ö S·¥á·¥á·¥ã ·¥õ ú·¥á ·¥ç·¥ús…™·¥Ñ ·¥õ·¥è  è·¥è·¥ú Ä ·¥Ö·¥ú Ä·¥Ä·¥õ…™·¥è…¥.
„ÄÖ /reboot - R·¥á ô·¥è·¥è·¥õ  ô·¥è·¥õ “ì·¥è Ä  è·¥è·¥ú Ä ·¥Ñ ú·¥Ä·¥õ.

„ÄÖ /skip ·¥è Ä /cskip [N·¥ú·¥ç ô·¥á Ä (·¥áx·¥Ä·¥ç·¥ò ü·¥á: ùüπ)] - S·¥ã…™·¥òs ·¥ç·¥ús…™·¥Ñ ·¥õ·¥è ·¥Ä ·¥õ ú·¥á s·¥ò·¥á·¥Ñ…™“ì…™·¥á·¥Ö «´·¥ú·¥á·¥ú·¥á·¥Ö …¥·¥ú·¥ç ô·¥á Ä. Ex·¥Ä·¥ç·¥ò ü·¥á: /skip ùüπ ·¥°…™ ü ü s·¥ã…™·¥ò ·¥ç·¥ús…™·¥Ñ ·¥õ·¥è ·¥õ ú…™ Ä·¥Ö «´·¥ú·¥á·¥ú·¥á·¥Ö ·¥ç·¥ús…™·¥Ñ ·¥Ä…¥·¥Ö ·¥°…™ ü ü …™…¢…¥·¥è Ä·¥á ùü∑ ·¥Ä…¥·¥Ö ùü∏ ·¥ç·¥ús…™·¥Ñ …™…¥ «´·¥ú·¥á·¥ú·¥á.
„ÄÖ /loop ·¥è Ä /cloop [·¥á…¥·¥Ä ô ü·¥á/·¥Ö…™s·¥Ä ô ü·¥á] ·¥è Ä [N·¥ú·¥ç ô·¥á Äs  ô·¥á·¥õ·¥°·¥á·¥á…¥ ùü∑-ùü∑ùü∂] - W ú·¥á…¥ ·¥Ä·¥Ñ·¥õ…™·¥†·¥Ä·¥õ·¥á·¥Ö,  ô·¥è·¥õ  ü·¥è·¥è·¥òs ·¥õ ú·¥á ·¥Ñ·¥ú Ä Ä·¥á…¥·¥õ ·¥ò ü·¥Ä è…™…¥…¢ ·¥ç·¥ús…™·¥Ñ ·¥õ·¥è ùü∑-ùü∑ùü∂ ·¥õ…™·¥ç·¥ás ·¥è…¥ ·¥†·¥è…™·¥Ñ·¥á ·¥Ñ ú·¥Ä·¥õ. D·¥á“ì·¥Ä·¥ú ü·¥õ ·¥õ·¥è ùü∑ùü∂ ·¥õ…™·¥ç·¥ás.
"""
buttons_adm = [
    [
        InlineKeyboardButton("‚¨ÖÔ∏è", callback_data="settings"),
        InlineKeyboardButton("‚ùå", callback_data="close"),
    ]
]
@Bot.on_callback_query(filters.regex("^adm$"))
async def abot_cb_handler(bot, query):
    await query.message.edit(
        text=text_adm,
        reply_markup=InlineKeyboardMarkup(buttons_adm),
        disable_web_page_preview=True,
    )


text_aut = """
H·¥á Ä·¥á Is T ú·¥á H·¥á ü·¥ò F·¥è Ä Au·¥õ ú:

A·¥ú·¥õ ú Us·¥á Äs ·¥Ñ·¥Ä…¥ ·¥ús·¥á ·¥Ä·¥Ö·¥ç…™…¥ ·¥Ñ·¥è·¥ç·¥ç·¥Ä…¥·¥Ös ·¥°…™·¥õ ú·¥è·¥ú·¥õ ·¥Ä·¥Ö·¥ç…™…¥  Ä…™…¢ ú·¥õs …™…¥  è·¥è·¥ú Ä ·¥Ñ ú·¥Ä·¥õ.

„ÄÖ /auth [Us·¥á Ä…¥·¥Ä·¥ç·¥á] - A·¥Ö·¥Ö ·¥Ä ·¥ús·¥á Ä ·¥õ·¥è AUTH LIST ·¥è“ì ·¥õ ú·¥á …¢ Ä·¥è·¥ú·¥ò.

„ÄÖ /unauth [Us·¥á Ä…¥·¥Ä·¥ç·¥á] - R·¥á·¥ç·¥è·¥†·¥á ·¥Ä ·¥ús·¥á Ä “ì Ä·¥è·¥ç AUTH LIST ·¥è“ì ·¥õ ú·¥á …¢ Ä·¥è·¥ú·¥ò.

„ÄÖ /authusers - C ú·¥á·¥Ñ·¥ã AUTH LIST ·¥è“ì ·¥õ ú·¥á …¢ Ä·¥è·¥ú·¥ò.
"""
buttons_aut = [
    [
        InlineKeyboardButton("‚¨ÖÔ∏è", callback_data="settings"),
        InlineKeyboardButton("‚ùå", callback_data="close"),
    ]
]
@Bot.on_callback_query(filters.regex("^aut$"))
async def abot_cb_handler(bot, query):
    await query.message.edit(
        text=text_aut,
        reply_markup=InlineKeyboardMarkup(buttons_aut),
        disable_web_page_preview=True,
    )


text_adv = """
H·¥á Ä·¥á Is T ú·¥á H·¥á ü·¥ò F·¥è Ä A·¥Ö·¥†…™·¥Ñ·¥á:

„ÄÖ /advice - G·¥á·¥õ  Ä·¥Ä…¥·¥Ö·¥è·¥ç ·¥Ä·¥Ö·¥†…™·¥Ñ·¥á
„ÄÖ /astronomical - ·¥õ·¥è …¢·¥á·¥õ ·¥õ·¥è·¥Ö·¥Ä è's ·¥Äs·¥õ Ä·¥è…¥·¥è·¥ç…™·¥Ñ·¥Ä ü  “ì·¥Ä·¥Ñ·¥õ
"""
buttons_adv = [
    [
        InlineKeyboardButton("‚¨ÖÔ∏è", callback_data="settings"),
        InlineKeyboardButton("‚ùå", callback_data="close"),
    ]
]
@Bot.on_callback_query(filters.regex("^adv$"))
async def abot_cb_handler(bot, query):
    await query.message.edit(
        text=text_adv,
        reply_markup=InlineKeyboardMarkup(buttons_adv),
        disable_web_page_preview=True,
    )


text_apr = """
H·¥á Ä·¥á Is T ú·¥á H·¥á ü·¥ò F·¥è Ä A·¥ò·¥ò Ä·¥è·¥†·¥á:

T ú…™s ·¥ç·¥è·¥Ö·¥ú ü·¥á  ú·¥á ü·¥òs ·¥õ·¥è ·¥Ä·¥ú·¥õ·¥è·¥ç·¥Ä·¥õ…™·¥Ñ·¥Ä ü ü è ·¥Ä·¥Ñ·¥Ñ·¥á·¥ò·¥õ ·¥Ñ ú·¥Ä·¥õ …™·¥è…™…¥  Ä·¥á«´·¥ú·¥ás·¥õ s·¥á…¥·¥Ö  ô è ·¥Ä ·¥ús·¥á Ä ·¥õ ú Ä·¥è·¥ú…¢ ú …™…¥·¥†…™·¥õ·¥Ä·¥õ…™·¥è…¥  ü…™…¥·¥ã ·¥è“ì  è·¥è·¥ú Ä …¢ Ä·¥è·¥ú·¥ò

M·¥è·¥Ö·¥ás:
·¥° ú·¥á…¥  è·¥è·¥ú s·¥á…¥·¥Ö /autoapprove …™…¥  è·¥è·¥ú Ä …¢ Ä·¥è·¥ú·¥ò  è·¥è·¥ú s·¥á·¥á ·¥õ·¥ú Ä…¥ ·¥è…¥  ô·¥ú·¥õ·¥õ·¥è…¥ …™“ì ·¥Ä·¥ú·¥õ·¥õ·¥è·¥ò Ä·¥è·¥†·¥á …¥·¥è·¥õ ·¥á…¥·¥Ä ô ü·¥á·¥Ö “ì·¥è Ä  è·¥è·¥ú Ä ·¥Ñ ú·¥Ä·¥õ …™“ì ·¥Ä ü Ä·¥á·¥Ö è ·¥õ·¥ú Ä…¥·¥á·¥Ö ·¥è…¥  è·¥è·¥ú ·¥°…™ ü ü s·¥á ·¥õ·¥°·¥è ·¥ç·¥è·¥Ö·¥ás ·¥õ ú·¥Ä·¥õ's ·¥Ä Ä·¥á  ô·¥á ü·¥è·¥° ·¥Ä…¥·¥Ö  ú…™s ·¥ús·¥Äs…¢·¥á


„ÄÖ Automatic - ·¥Ä·¥ú·¥õ·¥è·¥ç·¥Ä·¥õ…™·¥Ñ·¥Ä ü ü è ·¥Ä·¥Ñ·¥Ñ·¥á·¥ò·¥õs ·¥Ñ ú·¥Ä·¥õ ·¥ä·¥è…™…¥  Ä·¥á«´·¥ú·¥ás·¥õ.

„ÄÖ Manual - ·¥Ä ·¥ç·¥áss·¥Ä…¢·¥á ·¥°…™ ü ü  ô·¥á s·¥á…¥·¥Ö ·¥õ·¥è ·¥õ ú·¥á ·¥Ñ ú·¥Ä·¥õ  ô è ·¥õ·¥Ä…¢…¢…™…¥…¢ ·¥õ ú·¥á ·¥Ä·¥Ö·¥ç…™…¥s. ·¥õ ú·¥á ·¥Ä·¥Ö·¥ç…™…¥s ·¥Ñ·¥Ä…¥ ·¥Ä·¥Ñ·¥Ñ·¥á·¥ò·¥õ ·¥è Ä ·¥Ö·¥á·¥Ñ ü…™…¥·¥á ·¥õ ú·¥á  Ä·¥á«´·¥ú·¥ás·¥õs.

„ÄÖ /clearpending ·¥Ñ·¥è·¥ç·¥ç·¥Ä…¥·¥Ö ·¥õ·¥è  Ä·¥á·¥ç·¥è·¥†·¥á ·¥Ä ü ü ·¥ò·¥á…¥·¥Ö…™…¥…¢ ·¥ús·¥á Ä …™·¥Ö “ì Ä·¥è·¥ç ·¥Ö ô. ·¥õ ú…™s ·¥°…™ ü ü ·¥Ä ü ü·¥è·¥° ·¥õ ú·¥á ·¥ús·¥á Ä ·¥õ·¥è s·¥á…¥·¥Ö  Ä·¥á«´·¥ú·¥ás·¥õ ·¥Ä…¢·¥Ä…™…¥.
"""
buttons_apr = [
    [
        InlineKeyboardButton("‚¨ÖÔ∏è", callback_data="settings"),
        InlineKeyboardButton("‚ùå", callback_data="close"),
    ]
]
@Bot.on_callback_query(filters.regex("^apr$"))
async def abot_cb_handler(bot, query):
    await query.message.edit(
        text=text_apr,
        reply_markup=InlineKeyboardMarkup(buttons_apr),
        disable_web_page_preview=True,
    )


text_blt = """
H·¥á Ä·¥á Is T ú·¥á H·¥á ü·¥ò F·¥è Ä B- ü…™s·¥õ:

„ÄÖ /blacklistchat [·¥Ñ ú·¥Ä·¥õ …™·¥Ö] - B ü·¥Ä·¥Ñ·¥ã ü…™s·¥õ ·¥Ä…¥ è ·¥Ñ ú·¥Ä·¥õ “ì Ä·¥è·¥ç ·¥ús…™…¥…¢ M·¥ús…™·¥Ñ B·¥è·¥õ
„ÄÖ /whitelistchat [·¥Ñ ú·¥Ä·¥õ …™·¥Ö] - W ú…™·¥õ·¥á ü…™s·¥õ ·¥Ä…¥ è  ô ü·¥Ä·¥Ñ·¥ã ü…™s·¥õ·¥á·¥Ö ·¥Ñ ú·¥Ä·¥õ “ì Ä·¥è·¥ç ·¥ús…™…¥…¢ M·¥ús…™·¥Ñ B·¥è·¥õ
„ÄÖ /blacklistedchat - C ú·¥á·¥Ñ·¥ã ·¥Ä ü ü  ô ü·¥è·¥Ñ·¥ã·¥á·¥Ö ·¥Ñ ú·¥Ä·¥õs.

„ÄÖ /block [Us·¥á Ä…¥·¥Ä·¥ç·¥á ·¥è Ä R·¥á·¥ò ü è ·¥õ·¥è ·¥Ä ·¥ús·¥á Ä] - P Ä·¥á·¥†·¥á…¥·¥õs ·¥Ä ·¥ús·¥á Ä “ì Ä·¥è·¥ç ·¥ús…™…¥…¢  ô·¥è·¥õ ·¥Ñ·¥è·¥ç·¥ç·¥Ä…¥·¥Ös.
„ÄÖ /unblock [Us·¥á Ä…¥·¥Ä·¥ç·¥á ·¥è Ä R·¥á·¥ò ü è ·¥õ·¥è ·¥Ä ·¥ús·¥á Ä] - R·¥á·¥ç·¥è·¥†·¥á ·¥Ä ·¥ús·¥á Ä “ì Ä·¥è·¥ç B·¥è·¥õ's B ü·¥è·¥Ñ·¥ã·¥á·¥Ö L…™s·¥õ.
„ÄÖ /blockedusers - C ú·¥á·¥Ñ·¥ã  ô ü·¥è·¥Ñ·¥ã·¥á·¥Ö Us·¥á Äs L…™s·¥õs

‚ìò /gban [Us·¥á Ä…¥·¥Ä·¥ç·¥á ·¥è Ä R·¥á·¥ò ü è ·¥õ·¥è ·¥Ä ·¥ús·¥á Ä] - G ô·¥Ä…¥ ·¥Ä ·¥ús·¥á Ä “ì Ä·¥è·¥ç  ô·¥è·¥õ's s·¥á Ä·¥†·¥á·¥Ö ·¥Ñ ú·¥Ä·¥õ ·¥Ä…¥·¥Ö s·¥õ·¥è·¥ò  ú…™·¥ç “ì Ä·¥è·¥ç ·¥ús…™…¥…¢  è·¥è·¥ú Ä  ô·¥è·¥õ.
‚ìò /ungban [Us·¥á Ä…¥·¥Ä·¥ç·¥á ·¥è Ä R·¥á·¥ò ü è ·¥õ·¥è ·¥Ä ·¥ús·¥á Ä] - R·¥á·¥ç·¥è·¥†·¥á ·¥Ä ·¥ús·¥á Ä “ì Ä·¥è·¥ç B·¥è·¥õ's …¢ ô·¥Ä…¥…¥·¥á·¥Ö L…™s·¥õ ·¥Ä…¥·¥Ö ·¥Ä ü ü·¥è·¥°  ú…™·¥ç “ì·¥è Ä ·¥ús…™…¥…¢  è·¥è·¥ú Ä  ô·¥è·¥õ
‚ìò /gbannedusers - C ú·¥á·¥Ñ·¥ã G ô·¥Ä…¥…¥·¥á·¥Ö Us·¥á Äs L…™s·¥õs
"""
buttons_blt = [
    [
        InlineKeyboardButton("‚¨ÖÔ∏è", callback_data="settings"),
        InlineKeyboardButton("‚ùå", callback_data="close"),
    ]
]
@Bot.on_callback_query(filters.regex("^blt$"))
async def abot_cb_handler(bot, query):
    await query.message.edit(
        text=text_blt,
        reply_markup=InlineKeyboardMarkup(buttons_blt),
        disable_web_page_preview=True,
    )


text_bt = """
H·¥á Ä·¥á Is T ú·¥á H·¥á ü·¥ò F·¥è Ä Bo·¥õ:

„ÄÖ c s·¥õ·¥Ä…¥·¥Ös “ì·¥è Ä ·¥Ñ ú·¥Ä…¥…¥·¥á ü ·¥ò ü·¥Ä è.

„ÄÖ /stats - G·¥á·¥õ T·¥è·¥ò ùü∑ùü∂ T Ä·¥Ä·¥Ñ·¥ãs G ü·¥è ô·¥Ä ü S·¥õ·¥Ä·¥õs, T·¥è·¥ò ùü∑ùü∂ Us·¥á Äs ·¥è“ì  ô·¥è·¥õ, T·¥è·¥ò ùü∑ùü∂ C ú·¥Ä·¥õs ·¥è…¥  ô·¥è·¥õ, T·¥è·¥ò ùü∑ùü∂ P ü·¥Ä è·¥á·¥Ö …™…¥ ·¥Ä ·¥Ñ ú·¥Ä·¥õ ·¥á·¥õ·¥Ñ ·¥á·¥õ·¥Ñ.

„ÄÖ /sudolist - C ú·¥á·¥Ñ·¥ã S·¥ú·¥Ö·¥è Us·¥á Äs ·¥è“ì B·¥è·¥õ

„ÄÖ /lyrics [M·¥ús…™·¥Ñ N·¥Ä·¥ç·¥á] - S·¥á·¥Ä Ä·¥Ñ ú·¥ás L è Ä…™·¥Ñs “ì·¥è Ä ·¥õ ú·¥á ·¥ò·¥Ä Ä·¥õ…™·¥Ñ·¥ú ü·¥Ä Ä M·¥ús…™·¥Ñ ·¥è…¥ ·¥°·¥á ô.

„ÄÖ /player - G·¥á·¥õ ·¥Ä …™…¥·¥õ·¥á Ä·¥Ä·¥Ñ·¥õ…™·¥†·¥á P ü·¥Ä è…™…¥…¢ P·¥Ä…¥·¥á ü.

„ÄÖ /queue ·¥è Ä /cqueue - C ú·¥á·¥Ñ·¥ã Q·¥ú·¥á·¥ú·¥á L…™s·¥õ ·¥è“ì M·¥ús…™·¥Ñ.

    ‚ö°Ô∏èP Ä…™·¥†·¥Ä·¥õ·¥á B·¥è·¥õ:  
‚ìò /authorize [CHAT_ID] - A ü ü·¥è·¥° ·¥Ä ·¥Ñ ú·¥Ä·¥õ “ì·¥è Ä ·¥ús…™…¥…¢  è·¥è·¥ú Ä  ô·¥è·¥õ.

‚ìò /unauthorize[CHAT_ID] - D…™s·¥Ä ü ü·¥è·¥° ·¥Ä ·¥Ñ ú·¥Ä·¥õ “ì Ä·¥è·¥ç ·¥ús…™…¥…¢  è·¥è·¥ú Ä  ô·¥è·¥õ.

‚ìò /authorized - C ú·¥á·¥Ñ·¥ã ·¥Ä ü ü ·¥Ä ü ü·¥è·¥°·¥á·¥Ö ·¥Ñ ú·¥Ä·¥õs ·¥è“ì  è·¥è·¥ú Ä  ô·¥è·¥õ.
"""
buttons_bt = [
    [
        InlineKeyboardButton("‚¨ÖÔ∏è", callback_data="settings"),
        InlineKeyboardButton("‚ùå", callback_data="close"),
    ]
]
@Bot.on_callback_query(filters.regex("^bt$"))
async def abot_cb_handler(bot, query):
    await query.message.edit(
        text=text_bt,
        reply_markup=InlineKeyboardMarkup(buttons_bt),
        disable_web_page_preview=True,
    )


text_bn = """
H·¥á Ä·¥á Is T ú·¥á H·¥á ü·¥ò F·¥è Ä B·¥Ä…¥:

/ban - Ban A User
/banall - Ban All Users
/sban - Delete all messages of user that sended in group and ban the user
/tban - Ban A User For Specific Time
/unban - Unban A User
/warn - Warn A User
/swarn - Delete all the message sended in group and warn the user
/rmwarns - Remove All Warning of A User
/warns - Show Warning Of A User
/kick - Kick A User
/skick - Delete the replied message kicking its sender
/purge - Purge Messages
/purge [n] - Purge "n" number of messages from replied message
/del - Delete Replied Message
/promote - Promote A Member
/fullpromote - Promote A Member With All Rights
/demote - Demote A Member
/pin - Pin A Message
/unpin - unpin a message
/unpinall - unpinall messages
/mute - Mute A User
/tmute - Mute A User For Specific Time
/unmute - Unmute A User
/zombies - Ban Deleted Accounts
/report | @admins | @admin - Report A Message To Admins.
"""
buttons_bn = [
    [
        InlineKeyboardButton("‚¨ÖÔ∏è", callback_data="settings"),
        InlineKeyboardButton("‚ùå", callback_data="close"),
    ]
]
@Bot.on_callback_query(filters.regex("^bn$"))
async def abot_cb_handler(bot, query):
    await query.message.edit(
        text=text_bn,
        reply_markup=InlineKeyboardMarkup(buttons_bn),
        disable_web_page_preview=True,
    )


text_bts = """
H·¥á Ä·¥á Is T ú·¥á H·¥á ü·¥ò F·¥è Ä B·¥è·¥õs:

 ô·¥è·¥õs

„ÄÖ /bots - …¢·¥á·¥õ ·¥Ä  ü…™s·¥õ ·¥è“ì  ô·¥è·¥õs …™…¥ ·¥õ ú·¥á …¢ Ä·¥è·¥ú·¥ò.
"""
buttons_bts = [
    [
        InlineKeyboardButton("‚¨ÖÔ∏è", callback_data="settings"),
        InlineKeyboardButton("‚ùå", callback_data="close"),
    ]
]
@Bot.on_callback_query(filters.regex("^bts$"))
async def abot_cb_handler(bot, query):
    await query.message.edit(
        text=text_bts,
        reply_markup=InlineKeyboardMarkup(buttons_bts),
        disable_web_page_preview=True,
    )


text_bsk = """
H·¥á Ä·¥á Is T ú·¥á H·¥á ü·¥ò F·¥è Ä B·¥è·¥õs·¥Ñ ú·¥ã:

D·¥ás·¥Ñ Ä…™·¥ò·¥õ…™·¥è…¥:
C ú·¥á·¥Ñ·¥ãs ·¥õ ú·¥á ·¥è…¥…™…¥·¥á s·¥õ·¥Ä·¥õ·¥ús ·¥è“ì ·¥Ä s·¥ò·¥á·¥Ñ…™“ì…™·¥á·¥Ö  ô·¥è·¥õ  ô è s·¥á…¥·¥Ö…™…¥…¢ …™·¥õ ·¥Ä /start ·¥ç·¥áss·¥Ä…¢·¥á.

Us·¥Ä…¢·¥á:
/botschk B·¥è·¥õ_Us·¥á Ä…¥·¥Ä·¥ç·¥á

D·¥á·¥õ·¥Ä…™s:
„ÄÖ S·¥á…¥·¥Ös /start ·¥õ·¥è ·¥õ ú·¥á s·¥ò·¥á·¥Ñ…™“ì…™·¥á·¥Ö  ô·¥è·¥õ ·¥Ä…¥·¥Ö ·¥Ñ ú·¥á·¥Ñ·¥ãs …™“ì …™·¥õ  Ä·¥ás·¥ò·¥è…¥·¥Ös.
„ÄÖ D…™s·¥ò·¥Ä ès ·¥õ ú·¥á  ô·¥è·¥õ's s·¥õ·¥Ä·¥õ·¥ús ·¥Äs ·¥á…™·¥õ ú·¥á Ä ·¥è…¥…™…¥·¥á ·¥è Ä ·¥è“ì“ì…™…¥·¥á.

Ex·¥Ä·¥ç·¥ò·¥ás:
„ÄÖ /botschk @Y·¥è·¥ú ÄB·¥è·¥õUs·¥á Ä…¥·¥Ä·¥ç·¥á: C ú·¥á·¥Ñ·¥ãs …™“ì @Y·¥è·¥ú ÄB·¥è·¥õUs·¥á Ä…¥·¥Ä·¥ç·¥á …™s ·¥è…¥…™…¥·¥á ·¥è Ä ·¥è“ì“ì…™…¥·¥á.

N·¥è·¥õ·¥ás:
„ÄÖ T ú·¥á  ô·¥è·¥õ ·¥ús·¥á Ä…¥·¥Ä·¥ç·¥á ·¥ç·¥ús·¥õ  ô·¥á ·¥ò Ä·¥è·¥†…™·¥Ö·¥á·¥Ö ·¥Äs ·¥Ä…¥ ·¥Ä Ä…¢·¥ú·¥ç·¥á…¥·¥õ.
„ÄÖ T ú·¥á ·¥Ñ·¥è·¥ç·¥ç·¥Ä…¥·¥Ö ·¥°…™ ·¥Ö…™s·¥ò·¥Ä è ·¥Ä…¥ ·¥á Ä Ä·¥è Ä ·¥ç·¥áss·¥Ä…¢·¥á …™“ì ·¥õ ú·¥á ·¥ús·¥á Ä…¥·¥Ä·¥ç·¥á …™s …™…¥·¥Ñ·¥è Ä Ä·¥á·¥Ñ·¥õ ·¥è Ä …™“ì ·¥õ ú·¥á Ä·¥á ·¥Ä Ä·¥á …™·¥ç…™·¥õ·¥Ä·¥õ…™·¥è…¥s.

O·¥ú·¥õ·¥ò·¥ú·¥õ:
„ÄÖ D…™s·¥ò·¥Ä ès ·¥õ ú·¥á  ô·¥è·¥õ's ·¥ç·¥á…¥·¥õ…™·¥è…¥ ·¥Ä…¥·¥Ö …™·¥õs ·¥è…¥…™…¥·¥á s·¥õ·¥Ä·¥õ·¥ús.
„ÄÖ S ú·¥è·¥°s ·¥õ ú·¥á ·¥Äs·¥õ ·¥Ñ ú·¥á·¥Ñ·¥ã·¥á·¥Ö ·¥õ…™·¥ç·¥á.
"""
buttons_bsk = [
    [
        InlineKeyboardButton("‚¨ÖÔ∏è", callback_data="settings"),
        InlineKeyboardButton("‚ùå", callback_data="close"),
    ]
]
@Bot.on_callback_query(filters.regex("^bsk$"))
async def abot_cb_handler(bot, query):
    await query.message.edit(
        text=text_bsk,
        reply_markup=InlineKeyboardMarkup(buttons_bsk),
        disable_web_page_preview=True,
    )


text_ai = """
H·¥á Ä·¥á Is T ú·¥á H·¥á ü·¥ò F·¥è Ä C ú·¥Ä·¥õ Ai:

„ÄÖ /advice - …¢·¥á·¥õ  Ä·¥Ä…¥·¥Ö·¥è·¥ç ·¥Ä·¥Ö·¥†…™·¥Ñ·¥á  ô è  ô·¥è·¥õ
„ÄÖ /ai [«´·¥ú·¥á Ä è] - ·¥Äs·¥ã  è·¥è·¥ú Ä «´·¥ú·¥ás·¥õ…™·¥è…¥ ·¥°…™·¥õ ú ·¥Ñ ú·¥Ä·¥õ…¢·¥ò·¥õ's ·¥Ä…™
„ÄÖ /gemini [«´·¥ú·¥á Ä è] - ·¥Äs·¥ã  è·¥è·¥ú Ä «´·¥ú·¥ás·¥õ…™·¥è…¥ ·¥°…™·¥õ ú …¢·¥è·¥è…¢ ü·¥á's …¢·¥á·¥ç…™…¥…™ ·¥Ä…™
„ÄÖ /bard [«´·¥ú·¥á Ä è] -·¥Äs·¥ã  è·¥è·¥ú Ä «´·¥ú·¥ás·¥õ…™·¥è…¥ ·¥°…™·¥õ ú …¢·¥è·¥è…¢ ü·¥á's  ô·¥Ä Ä·¥Ö ·¥Ä…™
"""
buttons_ai = [
    [
        InlineKeyboardButton("‚¨ÖÔ∏è", callback_data="settings"),
        InlineKeyboardButton("‚ùå", callback_data="close"),
    ]
]
@Bot.on_callback_query(filters.regex("^ai$"))
async def abot_cb_handler(bot, query):
    await query.message.edit(
        text=text_ai,
        reply_markup=InlineKeyboardMarkup(buttons_ai),
        disable_web_page_preview=True,
    )


text_dv = """
H·¥á Ä·¥á Is T ú·¥á H·¥á ü·¥ò F·¥è Ä De·¥†:

üî∞A·¥Ö·¥Ö A…¥·¥Ö R·¥á·¥ç·¥è·¥†·¥á S·¥ú·¥Ö·¥è Us·¥á Ä's:
„ÄÖ /addsudo [Us·¥á Ä…¥·¥Ä·¥ç·¥á ·¥è Ä R·¥á·¥ò ü è ·¥õ·¥è ·¥Ä ·¥ús·¥á Ä]
„ÄÖ /delsudo [Us·¥á Ä…¥·¥Ä·¥ç·¥á ·¥è Ä R·¥á·¥ò ü è ·¥õ·¥è ·¥Ä ·¥ús·¥á Ä]

ü§ñB·¥è·¥õ C·¥è·¥ç·¥ç·¥Ä…¥·¥Ös:
‚ìò /restart - R·¥ás·¥õ·¥Ä Ä·¥õ  è·¥è·¥ú Ä B·¥è·¥õ. 
‚ìò /update , /gitpull - U·¥ò·¥Ö·¥Ä·¥õ·¥á B·¥è·¥õ.
‚ìò /speedtest - C ú·¥á·¥Ñ·¥ã s·¥á Ä·¥†·¥á Ä s·¥ò·¥á·¥á·¥Ös
‚ìò /maintenance [·¥á…¥·¥Ä ô ü·¥á / ·¥Ö…™s·¥Ä ô ü·¥á]
‚ìò /logger [·¥á…¥·¥Ä ô ü·¥á / ·¥Ö…™s·¥Ä ô ü·¥á] - B·¥è·¥õ  ü·¥è…¢s ·¥õ ú·¥á s·¥á·¥Ä Ä·¥Ñ ú·¥á·¥Ö «´·¥ú·¥á Ä…™·¥ás …™…¥  ü·¥è…¢…¢·¥á Ä …¢ Ä·¥è·¥ú·¥ò.
‚ìò /get_log [N·¥ú·¥ç ô·¥á Ä ·¥è“ì L…™…¥·¥ás] - G·¥á·¥õ  ü·¥è…¢ ·¥è“ì  è·¥è·¥ú Ä  ô·¥è·¥õ “ì Ä·¥è·¥ç  ú·¥á Ä·¥è·¥ã·¥ú ·¥è Ä ·¥†·¥òs. W·¥è Ä·¥ãs “ì·¥è Ä  ô·¥è·¥õ ú.
‚ìò /autoend [·¥á…¥·¥Ä ô ü·¥á|·¥Ö…™s·¥Ä ô ü·¥á] - E…¥·¥Ä ô ü·¥á A·¥ú·¥õ·¥è s·¥õ Ä·¥á·¥Ä·¥ç ·¥á…¥·¥Ö ·¥Ä“ì·¥õ·¥á Ä ùüπ ·¥ç…™…¥s …™“ì …¥·¥è ·¥è…¥·¥á …™s  ü…™s·¥õ·¥á…¥…™…¥…¢.
"""
buttons_dv = [
    [
        InlineKeyboardButton("‚¨ÖÔ∏è", callback_data="settings"),
        InlineKeyboardButton("‚ùå", callback_data="close"),
    ]
]
@Bot.on_callback_query(filters.regex("^dv$"))
async def abot_cb_handler(bot, query):
    await query.message.edit(
        text=text_dv,
        reply_markup=InlineKeyboardMarkup(buttons_dv),
        disable_web_page_preview=True,
    )


text_flt = """
H·¥á Ä·¥á Is T ú·¥á H·¥á ü·¥ò F·¥è Ä Filters:

„ÄÖ /filters To Get All The Filters In The Chat.
„ÄÖ /filter [FILTER_NAME] To Save A Filter(reply to a message).

Supported filter types are Text, Animation, Photo, Document, Video, video notes, Audio, Voice.

To use more words in a filter use.
„ÄÖ /filter Hey_there To filter "Hey there".

„ÄÖ /stop [FILTER_NAME] To Stop A Filter.
„ÄÖ /stopall To delete all the filters in a chat (permanently).

You can use markdown or html to save text too.

Checkout /markdownhelp to know more about formattings and other syntax.
"""
buttons_flt = [
    [
        InlineKeyboardButton("‚¨ÖÔ∏è", callback_data="settings"),
        InlineKeyboardButton("‚ùå", callback_data="close"),
    ]
]
@Bot.on_callback_query(filters.regex("^flt$"))
async def abot_cb_handler(bot, query):
    await query.message.edit(
        text=text_flt,
        reply_markup=InlineKeyboardMarkup(buttons_flt),
        disable_web_page_preview=True,
    )


text_fgl = """
H·¥á Ä·¥á Is T ú·¥á H·¥á ü·¥ò F·¥è Ä F…™…¢ ü·¥á·¥õ:

„ÄÖ /figlet  - ·¥Ñ Ä·¥á·¥Ä·¥õ·¥ás ·¥Ä “ì…™…¢ ü·¥á·¥õ ·¥è“ì ·¥õ ú·¥á …¢…™·¥†·¥á…¥ ·¥õ·¥áx·¥õ.
"""
buttons_fgl = [
    [
        InlineKeyboardButton("‚¨ÖÔ∏è", callback_data="settings"),
        InlineKeyboardButton("‚ùå", callback_data="close"),
    ]
]
@Bot.on_callback_query(filters.regex("^fgl$"))
async def abot_cb_handler(bot, query):
    await query.message.edit(
        text=text_fgl,
        reply_markup=InlineKeyboardMarkup(buttons_fgl),
        disable_web_page_preview=True,
    )


text_fk = """
H·¥á Ä·¥á Is T ú·¥á H·¥á ü·¥ò F·¥è Ä F·¥Ä·¥ã·¥á:

„ÄÖ /fake [·¥Ñ·¥è·¥ú…¥·¥õ Ä è …¥·¥Ä·¥ç·¥á ] - ·¥õ·¥è …¢·¥á·¥õ  Ä·¥Ä…¥·¥Ö·¥è·¥ç ·¥Ä·¥Ö·¥Ö Ä·¥áss
"""
buttons_fk = [
    [
        InlineKeyboardButton("‚¨ÖÔ∏è", callback_data="settings"),
        InlineKeyboardButton("‚ùå", callback_data="close"),
    ]
]
@Bot.on_callback_query(filters.regex("^fk$"))
async def abot_cb_handler(bot, query):
    await query.message.edit(
        text=text_fk,
        reply_markup=InlineKeyboardMarkup(buttons_fk),
        disable_web_page_preview=True,
    )


text_fon = """
H·¥á Ä·¥á Is T ú·¥á H·¥á ü·¥ò F·¥è Ä F·¥è…¥·¥õ:

„ÄÖ /font [text] - ·¥Ñ·¥è…¥·¥†·¥á Ä·¥õs s…™·¥ç·¥© ü·¥á ·¥õ·¥áx·¥õ ·¥õ·¥è  ô·¥á·¥Ä·¥ú·¥õ…™“ì·¥ú ü ·¥õ·¥áx·¥õ  ô è ·¥Ñ ú·¥Ä…¥…¢…™…¥…¢ …™·¥õ's “ì·¥è…¥·¥õ.
"""
buttons_fon = [
    [
        InlineKeyboardButton("‚¨ÖÔ∏è", callback_data="settings"),
        InlineKeyboardButton("‚ùå", callback_data="close"),
    ]
]
@Bot.on_callback_query(filters.regex("^fon$"))
async def abot_cb_handler(bot, query):
    await query.message.edit(
        text=text_fon,
        reply_markup=InlineKeyboardMarkup(buttons_fon),
        disable_web_page_preview=True,
    )


text_fn = """
H·¥á Ä·¥á Is T ú·¥á H·¥á ü·¥ò F·¥è Ä F·¥ú…¥:

 ú·¥Ä·¥†…™…¥…¢ Íú∞·¥ú…¥:
„ÄÖ /dice: R·¥è ü üs ·¥Ä ·¥Ö…™·¥Ñ·¥á.
„ÄÖ /ludo: P ü·¥Ä è L·¥ú·¥Ö·¥è.
„ÄÖ /dart: T ú Ä·¥è·¥°s ·¥Ä ·¥Ö·¥Ä Ä·¥õ.
„ÄÖ /basket ·¥è Ä /basketball: P ü·¥Ä ès  ô·¥Äs·¥ã·¥á·¥õ ô·¥Ä ü ü.
„ÄÖ /football: P ü·¥Ä ès “ì·¥è·¥è·¥õ ô·¥Ä ü ü.
„ÄÖ /slot ·¥è Ä /jackpot: P ü·¥Ä ès ·¥ä·¥Ä·¥Ñ·¥ã·¥ò·¥è·¥õ.
„ÄÖ /bowling: P ü·¥Ä ès  ô·¥è·¥° ü…™…¥…¢.
„ÄÖ /bored: G·¥á·¥õs  Ä·¥Ä…¥·¥Ö·¥è·¥ç ·¥Ä·¥Ñ·¥õ…™·¥†…™·¥õ è …™“ì  è·¥è·¥ú' Ä·¥á  ô·¥è Ä·¥á·¥Ö.
"""
buttons_fn = [
    [
        InlineKeyboardButton("‚¨ÖÔ∏è", callback_data="settings"),
        InlineKeyboardButton("‚ùå", callback_data="close"),
    ]
]
@Bot.on_callback_query(filters.regex("^fn$"))
async def abot_cb_handler(bot, query):
    await query.message.edit(
        text=text_fn,
        reply_markup=InlineKeyboardMarkup(buttons_fn),
        disable_web_page_preview=True,
    )


text_gt = """
H·¥á Ä·¥á Is T ú·¥á H·¥á ü·¥ò F·¥è Ä G-·¥Ñ·¥Äs·¥õ:

„ÄÖ /broadcast [·¥ç·¥áss·¥Ä…¢·¥á ·¥è Ä  Ä·¥á·¥© ü è ·¥õ·¥è ·¥Ä ·¥ç·¥áss·¥Ä…¢·¥á] ¬ª  ô Ä·¥è·¥Ä·¥Ö·¥Ñ·¥Äs·¥õ ·¥Ä ·¥ç·¥áss·¥Ä…¢·¥á ·¥õ·¥è s·¥á Ä·¥†·¥á·¥Ö ·¥Ñ ú·¥Ä·¥õs ·¥è“ì ·¥õ ú·¥á  ô·¥è·¥õ.
 ô Ä·¥è·¥Ä·¥Ö·¥Ñ·¥Äs·¥õ…™…¥…¢ ·¥ç·¥è·¥Ö·¥ás:

-pin ¬ª ·¥©…™…¥s  è·¥è·¥ú Ä  ô Ä·¥è·¥Ä·¥Ö·¥Ñ·¥Äs·¥õ·¥á·¥Ö ·¥ç·¥áss·¥Ä…¢·¥ás …™…¥ s·¥á Ä·¥†·¥á·¥Ö ·¥Ñ ú·¥Ä·¥õs.

-pinloud ¬ª ·¥©…™…¥s  è·¥è·¥ú Ä  ô Ä·¥è·¥Ä·¥Ö·¥Ñ·¥Äs·¥õ·¥á·¥Ö ·¥ç·¥áss·¥Ä…¢·¥á …™…¥ s·¥á Ä·¥†·¥á·¥Ö ·¥Ñ ú·¥Ä·¥õs ·¥Ä…¥·¥Ö s·¥á…¥·¥Ö …¥·¥è·¥õ…™“ì…™·¥Ñ·¥Ä·¥õ…™·¥è…¥ ·¥õ·¥è ·¥õ ú·¥á ·¥ç·¥á·¥ç ô·¥á Äs.

-user ¬ª  ô Ä·¥è·¥Ä·¥Ö·¥Ñ·¥Äs·¥õs ·¥õ ú·¥á ·¥ç·¥áss·¥Ä…¢·¥á ·¥õ·¥è ·¥õ ú·¥á ·¥ús·¥á Äs ·¥° ú·¥è  ú·¥Ä·¥†·¥á s·¥õ·¥Ä Ä·¥õ·¥á·¥Ö  è·¥è·¥ú Ä  ô·¥è·¥õ.

-assistant ¬ª  ô Ä·¥è·¥Ä·¥Ö·¥Ñ·¥Äs·¥õ  è·¥è·¥ú Ä ·¥ç·¥áss·¥Ä…¢·¥á “ì Ä·¥è·¥ç ·¥õ ú·¥á ·¥Äss…™·¥õ·¥Ä…¥·¥õ ·¥Ä·¥Ñ·¥Ñ·¥è·¥ú…¥·¥õ ·¥è“ì ·¥õ ú·¥á  ô·¥è·¥õ.

-nobot ¬ª “ì·¥è Ä·¥Ñ·¥ás ·¥õ ú·¥á  ô·¥è·¥õ ·¥õ·¥è …¥·¥è·¥õ  ô Ä·¥è·¥Ä·¥Ö·¥Ñ·¥Äs·¥õ ·¥õ ú·¥á ·¥ç·¥áss·¥Ä…¢·¥á.

·¥áx·¥Ä·¥ç·¥© ü·¥á: /broadcast -user -assistant -pin ·¥õ·¥ás·¥õ…™…¥…¢  ô Ä·¥è·¥Ä·¥Ö·¥Ñ·¥Äs·¥õ
"""
buttons_gt = [
    [
        InlineKeyboardButton("‚¨ÖÔ∏è", callback_data="settings"),
        InlineKeyboardButton("‚ùå", callback_data="close"),
    ]
]
@Bot.on_callback_query(filters.regex("^gt$"))
async def abot_cb_handler(bot, query):
    await query.message.edit(
        text=text_gt,
        reply_markup=InlineKeyboardMarkup(buttons_gt),
        disable_web_page_preview=True,
    )


text_gl = """
H·¥á Ä·¥á Is T ú·¥á H·¥á ü·¥ò F·¥è Ä G Ä·¥è·¥ú·¥ò L…™…¥·¥ã:

„ÄÖ /…¢…™·¥†·¥á…™…¥·¥ã: G·¥á·¥õ ·¥õ ú·¥á …™…¥·¥†…™·¥õ·¥á …™…¥·¥ã “ì·¥è Ä ·¥õ ú·¥á ·¥Ñ·¥ú Ä Ä·¥á…¥·¥õ ·¥Ñ ú·¥Ä·¥õ.
„ÄÖ /…™…¥·¥ã …¢ Ä·¥è·¥ú·¥ò_…™·¥Ö: G·¥á·¥õ …™…¥“ì·¥è Ä·¥ç·¥Ä·¥õ…™·¥è…¥ ·¥Ä…¥·¥Ö …¢·¥á…¥·¥á Ä·¥Ä·¥õ·¥á ·¥Ä…¥ …™…¥·¥†…™·¥õ·¥á …™…¥·¥ã “ì·¥è Ä ·¥õ ú·¥á s·¥ò·¥á·¥Ñ…™“ì…™·¥á·¥Ö …¢ Ä·¥è·¥ú·¥ò ID.
"""
buttons_gl = [
    [
        InlineKeyboardButton("‚¨ÖÔ∏è", callback_data="settings"),
        InlineKeyboardButton("‚ùå", callback_data="close"),
    ]
]
@Bot.on_callback_query(filters.regex("^gl$"))
async def abot_cb_handler(bot, query):
    await query.message.edit(
        text=text_gl,
        reply_markup=InlineKeyboardMarkup(buttons_gl),
        disable_web_page_preview=True,
    )


text_gli = """
H·¥á Ä·¥á Is T ú·¥á H·¥á ü·¥ò F·¥è Ä G·¥Ä ü…™:

T ú…™s ·¥Ñ·¥è·¥ç·¥ç·¥Ä…¥·¥Ö …™s ·¥è…¥ è “ì·¥è Ä P Ä…™·¥†·¥Ä·¥õ·¥á ·¥ç·¥áss·¥Ä…¢·¥á, G·¥è T·¥è B·¥è·¥õ P Ä…™·¥†·¥Ä·¥õ·¥á M·¥áss·¥Ä…¢·¥á A…¥·¥Ö T è·¥ò·¥á /gai C·¥è·¥ç·¥ç·¥Ä…¥·¥Ö.

F·¥á·¥Ä·¥õ·¥ú Ä·¥ás:
- P Ä·¥è·¥†…™·¥Ö·¥ás  Ä·¥Ä…¥·¥Ö·¥è·¥ç ·¥Ä ô·¥ús…™·¥†·¥á ·¥Ä…¥…¢·¥ú·¥Ä…¢·¥á (…¢·¥Ä…™) ·¥° ú·¥á…¥ ·¥ús·¥á·¥Ö …™…¥ DMs.
- D…™s·¥ò·¥Ä ès ·¥Ä ·¥ç·¥áss·¥Ä…¢·¥á …™…¥·¥Ö…™·¥Ñ·¥Ä·¥õ…™…¥…¢ ·¥õ ú·¥á ·¥Ñ·¥è·¥ç·¥ç·¥Ä…¥·¥Ö …™s ·¥è…¥ è “ì·¥è Ä ·¥ò Ä…™·¥†·¥Ä·¥õ·¥á ·¥ç·¥áss·¥Ä…¢·¥ás ·¥° ú·¥á…¥ ·¥ús·¥á·¥Ö …™…¥ …¢ Ä·¥è·¥ú·¥òs.

C·¥è·¥ç·¥ç·¥Ä…¥·¥Ö:
 /gai : S·¥á…¥·¥Ös ·¥Ä  Ä·¥Ä…¥·¥Ö·¥è·¥ç ·¥Ä ô·¥ús…™·¥†·¥á ·¥Ä…¥…¢·¥ú·¥Ä…¢·¥á (…¢·¥Ä…™) ·¥° ú·¥á…¥ ·¥ús·¥á·¥Ö …™…¥ DMs.

N·¥è·¥õ·¥á: T ú…™s ·¥Ñ·¥è·¥ç·¥ç·¥Ä…¥·¥Ö …™s  Ä·¥ás·¥õ Ä…™·¥Ñ·¥õ·¥á·¥Ö ·¥õ·¥è ·¥ò Ä…™·¥†·¥Ä·¥õ·¥á ·¥ç·¥áss·¥Ä…¢·¥ás ·¥è…¥ è ·¥õ·¥è ·¥ç·¥Ä…™…¥·¥õ·¥Ä…™…¥ ·¥Ö·¥á·¥Ñ·¥è Ä·¥ú·¥ç …™…¥ …¢ Ä·¥è·¥ú·¥ò ·¥Ñ ú·¥Ä·¥õs.
"""
buttons_gli = [
    [
        InlineKeyboardButton("‚¨ÖÔ∏è", callback_data="settings"),
        InlineKeyboardButton("‚ùå", callback_data="close"),
    ]
]
@Bot.on_callback_query(filters.regex("^gli$"))
async def abot_cb_handler(bot, query):
    await query.message.edit(
        text=text_gli,
        reply_markup=InlineKeyboardMarkup(buttons_gli),
        disable_web_page_preview=True,
    )


text_src = """
H·¥á Ä·¥á Is T ú·¥á H·¥á ü·¥ò F·¥è Ä G·¥è·¥è…¢ ü·¥á:
„ÄÖ /google [«´·¥ú·¥á Ä è] - ·¥õ·¥è s·¥á·¥Ä Ä·¥Ñ ú ·¥è…¥ …¢·¥è·¥è…¢ ü·¥á ·¥Ä…¥·¥Ö …¢·¥á·¥õ  Ä·¥ás·¥ú ü·¥õs
„ÄÖ /app | /apps [·¥Ä·¥ò·¥ò …¥·¥Ä·¥ç·¥á] - ·¥õ·¥è …¢·¥á·¥õ ·¥Ä·¥ò·¥ò …™…¥“ì·¥è ·¥õ ú·¥Ä·¥õ ·¥Ä·¥†·¥Ä…™ ü·¥Ä ô ü·¥á ·¥è…¥ ·¥ò ü·¥Ä ès·¥õ·¥è Ä·¥á
"""
buttons_src = [
    [
        InlineKeyboardButton("‚¨ÖÔ∏è", callback_data="settings"),
        InlineKeyboardButton("‚ùå", callback_data="close"),
    ]
]
@Bot.on_callback_query(filters.regex("^src$"))
async def abot_cb_handler(bot, query):
    await query.message.edit(
        text=text_src,
        reply_markup=InlineKeyboardMarkup(buttons_src),
        disable_web_page_preview=True,
    )


text_gdy = """
H·¥á Ä·¥á Is T ú·¥á H·¥á ü·¥ò F·¥è Ä G·¥è·¥è·¥Ö ô è·¥á:

 ú·¥á Ä·¥á …™s ·¥õ ú·¥á  ú·¥á ü·¥ò “ì·¥è Ä …¢·¥è·¥è·¥Ö ô è·¥á:
/setgoodbye - R·¥á·¥ò ü è ·¥õ ú…™s ·¥õ·¥è ·¥Ä ·¥ç·¥áss·¥Ä…¢·¥á ·¥Ñ·¥è…¥·¥õ·¥Ä…™…¥…™…¥…¢ ·¥Ñ·¥è Ä Ä·¥á·¥Ñ·¥õ
“ì·¥è Ä·¥ç·¥Ä·¥õ “ì·¥è Ä ·¥Ä ·¥°·¥á ü·¥Ñ·¥è·¥ç·¥á ·¥ç·¥áss·¥Ä…¢·¥á, ·¥Ñ ú·¥á·¥Ñ·¥ã ·¥á…¥·¥Ö ·¥è“ì ·¥õ ú…™s ·¥ç·¥áss·¥Ä…¢·¥á.
/goodbye - T·¥è …¢·¥á·¥õ  è·¥è·¥ú Ä …¢·¥è·¥è·¥Ö ô è·¥á ·¥ç·¥áss·¥Ä…¢·¥á
/goodbye  [·¥è…¥,  è, ·¥õ Ä·¥ú·¥á, ·¥á…¥·¥Ä ô ü·¥á, ·¥õ] - ·¥õ·¥è ·¥õ·¥ú Ä…¥ ·¥è…¥ …¢·¥è·¥è·¥Ö ô è·¥á ·¥ç·¥áss·¥Ä…¢·¥ás
/goodbye [·¥è“ì“ì, …¥, “ì·¥Ä üs·¥á, ·¥Ö…™s·¥Ä ô ü·¥á, “ì, …¥·¥è] - ·¥õ·¥è ·¥õ·¥ú Ä…¥ ·¥è“ì“ì …¢·¥è·¥è·¥Ö ô è·¥á ·¥ç·¥áss·¥Ä…¢·¥ás
/delgoodbye ·¥è Ä /deletegoodbye ·¥õ·¥è ·¥Ö·¥á ü·¥õ·¥á …¢·¥è·¥è·¥Ö ô è·¥á ·¥ç·¥áss·¥Ä…¢·¥á ·¥Ä…¥·¥Ö ·¥õ·¥ú Ä…¥ ·¥è“ì“ì …¢·¥è·¥è·¥Ö ô è·¥á
SetoodBye ->

T·¥è s·¥á·¥õ ·¥Ä ·¥ò ú·¥è·¥õ·¥è ·¥è Ä …¢…™“ì ·¥Äs …¢·¥è·¥è·¥Ö ô è·¥á ·¥ç·¥áss·¥Ä…¢·¥á. A·¥Ö·¥Ö  è·¥è·¥ú Ä …¢·¥è·¥è·¥Ö ô è·¥á ·¥ç·¥áss·¥Ä…¢·¥á ·¥Äs ·¥Ñ·¥Ä·¥ò·¥õ…™·¥è…¥ ·¥õ·¥è ·¥õ ú·¥á ·¥ò ú·¥è·¥õ·¥è ·¥è Ä …¢…™“ì. T ú·¥á ·¥Ñ·¥Ä·¥ò·¥õ…™·¥è…¥ ·¥ç·¥ús·¥á  ô·¥á …™…¥ ·¥õ ú·¥á “ì·¥è Ä·¥ç·¥Ä·¥õ …¢…™·¥†·¥á…¥  ô·¥á ü·¥è·¥°.
F·¥è Ä ·¥õ·¥áx·¥õ …¢·¥è·¥è·¥Ö ô è·¥á ·¥ç·¥áss·¥Ä…¢·¥á J·¥ús·¥õ s·¥á…¥·¥Ö ·¥õ ú·¥á ·¥õ·¥áx·¥õ. T ú·¥á…¥  Ä·¥á·¥ò ü è ·¥°…™·¥õ ú ·¥õ ú·¥á ·¥Ñ·¥è·¥ç·¥ç·¥Ä…¥·¥Ö
T ú·¥á “ì·¥è Ä·¥ç·¥Ä·¥õ s ú·¥è·¥ú ü·¥Ö  ô·¥á s·¥è·¥ç·¥á·¥õ ú…™…¥…¢  ü…™·¥ã·¥á  ô·¥á ü·¥è·¥°.
H…™ {NAME} [{ID}] W·¥á ü·¥Ñ·¥è·¥ç·¥á ·¥õ·¥è {GROUPNAME}

~ T ú…™s s·¥á·¥ò·¥Ä Ä·¥Ä·¥õ·¥á Ä (~) s ú·¥è·¥ú ü·¥Ö  ô·¥á ·¥õ ú·¥á Ä·¥á  ô·¥á·¥õ·¥°·¥á·¥á…¥ ·¥õ·¥áx·¥õ ·¥Ä…¥·¥Ö  ô·¥ú·¥õ·¥õ·¥è…¥s,  Ä·¥á·¥ç·¥è·¥†·¥á ·¥õ ú…™s ·¥Ñ·¥è·¥ç·¥ç·¥á…¥·¥õ ·¥Ä üs·¥è

Button=[D·¥ú·¥Ñ·¥ã,  ú·¥õ·¥õ·¥òs://·¥Ö·¥ú·¥Ñ·¥ã·¥Ö·¥ú·¥Ñ·¥ã…¢·¥è.·¥Ñ·¥è·¥ç]
Button2=[G…™·¥õ ú·¥ú ô,  ú·¥õ·¥õ·¥òs://…¢…™·¥õ ú·¥ú ô.·¥Ñ·¥è·¥ç]
NOTES ->

C ú·¥á·¥Ñ·¥ã·¥è·¥ú·¥õ /markdownhelp ·¥õ·¥è ·¥ã…¥·¥è·¥° ·¥ç·¥è Ä·¥á ·¥Ä ô·¥è·¥ú·¥õ “ì·¥è Ä·¥ç·¥Ä·¥õ·¥õ…™…¥…¢s ·¥Ä…¥·¥Ö ·¥è·¥õ ú·¥á Ä s è…¥·¥õ·¥Äx.
"""
buttons_gdy = [
    [
        InlineKeyboardButton("‚¨ÖÔ∏è", callback_data="settings"),
        InlineKeyboardButton("‚ùå", callback_data="close"),
    ]
]
@Bot.on_callback_query(filters.regex("^gdy$"))
async def abot_cb_handler(bot, query):
    await query.message.edit(
        text=text_gdy,
        reply_markup=InlineKeyboardMarkup(buttons_gdy),
        disable_web_page_preview=True,
    )


text_hsr = """
H·¥á Ä·¥á Is T ú·¥á H·¥á ü·¥ò F·¥è Ä H…™s·¥õ·¥è Ä è: 

1. /sg ·¥è Ä /history 
D·¥ás·¥Ñ Ä…™·¥ò·¥õ…™·¥è…¥:
F·¥á·¥õ·¥Ñ ú·¥ás ·¥Ä  Ä·¥Ä…¥·¥Ö·¥è·¥ç ·¥ç·¥áss·¥Ä…¢·¥á “ì Ä·¥è·¥ç ·¥Ä ·¥ús·¥á Ä's ·¥ç·¥áss·¥Ä…¢·¥á  ú…™s·¥õ·¥è Ä è.

Us·¥Ä…¢·¥á:
„ÄÖ /sg [·¥ús·¥á Ä…¥·¥Ä·¥ç·¥á/…™·¥Ö/ Ä·¥á·¥ò è]

D·¥á·¥õ·¥Ä…™s:
- F·¥á·¥õ·¥Ñ ú·¥ás ·¥Ä  Ä·¥Ä…¥·¥Ö·¥è·¥ç ·¥ç·¥áss·¥Ä…¢·¥á “ì Ä·¥è·¥ç ·¥õ ú·¥á ·¥ç·¥áss·¥Ä…¢·¥á  ú…™s·¥õ·¥è Ä è ·¥è“ì ·¥õ ú·¥á s·¥ò·¥á·¥Ñ…™“ì…™·¥á·¥Ö ·¥ús·¥á Ä.
- C·¥Ä…¥  ô·¥á ·¥ús·¥á·¥Ö  ô è ·¥ò Ä·¥è·¥†…™·¥Ö…™…¥…¢ ·¥Ä ·¥ús·¥á Ä…¥·¥Ä·¥ç·¥á, ·¥ús·¥á Ä ID, ·¥è Ä  Ä·¥á·¥ò è…™…¥…¢ ·¥õ·¥è ·¥Ä ·¥ç·¥áss·¥Ä…¢·¥á “ì Ä·¥è·¥ç ·¥õ ú·¥á ·¥ús·¥á Ä.
- A·¥Ñ·¥Ñ·¥áss…™ ô·¥á ·¥è…¥ è  ô è ·¥õ ú·¥á  ô·¥è·¥õ's ·¥Äss…™s·¥õ·¥Ä…¥·¥õs.

Ex·¥Ä·¥ç·¥ò·¥ás:
- /sg ·¥ús·¥á Ä…¥·¥Ä·¥ç·¥á
- /sg ·¥ús·¥á Ä_…™·¥Ö
- /sg [ Ä·¥á·¥ò è ·¥õ·¥è ·¥Ä ·¥ç·¥áss·¥Ä…¢·¥á]
"""
buttons_hsr = [
    [
        InlineKeyboardButton("‚¨ÖÔ∏è", callback_data="settings"),
        InlineKeyboardButton("‚ùå", callback_data="close"),
    ]
]
@Bot.on_callback_query(filters.regex("^hsr$"))
async def abot_cb_handler(bot, query):
    await query.message.edit(
        text=text_hsr,
        reply_markup=InlineKeyboardMarkup(buttons_hsr),
        disable_web_page_preview=True,
    )


text_htg = """
H·¥á Ä·¥á Is T ú·¥á H·¥á ü·¥ò F·¥è Ä H·¥Äs ú·¥õ·¥Ä…¢:

 ú·¥Äs ú·¥õ·¥Ä…¢ …¢·¥á…¥·¥á Ä·¥Ä·¥õ·¥è Ä:

„ÄÖ /hashtag [text]: G·¥á…¥·¥á Ä·¥Ä·¥õ·¥á  ú·¥Äs ú·¥õ·¥Ä…¢s “ì·¥è Ä ·¥õ ú·¥á …¢…™·¥†·¥á…¥ ·¥õ·¥áx·¥õ.
"""
buttons_htg = [
    [
        InlineKeyboardButton("‚¨ÖÔ∏è", callback_data="settings"),
        InlineKeyboardButton("‚ùå", callback_data="close"),
    ]
]
@Bot.on_callback_query(filters.regex("^htg$"))
async def abot_cb_handler(bot, query):
    await query.message.edit(
        text=text_htg,
        reply_markup=InlineKeyboardMarkup(buttons_htg),
        disable_web_page_preview=True,
    )


# =============================================================
# =============================================================

# ==============CLOSE===================
@Bot.on_callback_query(filters.regex("^close$"))
async def close_cb(bot, callback):
    await callback.answer("‚ùåClosed the Module‚ùå")
    await callback.message.delete()
    await callback.message.reply_to_message.delete()
